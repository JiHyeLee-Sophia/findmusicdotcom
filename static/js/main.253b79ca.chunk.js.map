{"version":3,"sources":["image/0.jpg","image/1.jpg","image/2.jpg","image/3.jpg","image/4.jpg","image/5.jpg","image/6.jpg","image/7.jpg","image/8.jpg","image/9.jpg","image/10.jpg","image/11.jpg","image/12.jpg","image/13.jpg","image/14.jpg","image/15.jpg","image/16.jpg","image/17.jpg","image/18.jpg","image/19.jpg","image/20.jpg","image/21.jpg","components/Home.js","components/Song.js","components/Artist.js","routes/Result.js","components/Album.js","components/Reco.js","components/Body.js","routes/Album_title.js","routes/Artist_title.js","components/Info.js","components/App.js","index.js"],"names":["module","exports","Container","styled","div","Header","Title","h1","Search","SearchBar","input","Button","button","Home","state","keyChangeHandler","e","setState","target","value","keyDownHandler","keyCode","document","querySelector","parentElement","click","to","style","textDecoration","id","onChange","this","onKeyDown","React","Component","Song","props","clickHandler","preventDefault","audioRef","current","play","stopHandler","audio","createRef","Poster","poster","album","title","Singer","artist","Preview","onClick","role","aria-label","ref","onEnded","onPause","src","preview","span","Artist","color","Contaier","Name","name","cancel","Album","CancelToken","axios","selectSongDatas","selectArtistDatas","selectAlbumDatas","preSongButton","preArtistButton","preAlbumButton","Result","bySelect","anArray","num","stateLocation","i","length","index","Math","floor","toString","push","topHandler","window","scroll","top","behavior","songHandler","distance","gotoSong","offsetTop","artistHandler","gotoArtist","albumHandler","gotoAlbum","selectSongHandler","_isMounted","isLoading","datas","selectArtistHandler","artists","selectAlbumHandler","albums","songPageHandler","songPage","buttonBackgroundChanger","artistPageHandler","artistPage","albumPageHandler","albumPage","match","params","get","q","limit","method","headers","cancelToken","c","data","newMapAR","map","each","settedAR","Set","arrayedAR","Array","from","j","newMapAB","settedAB","arrayedAB","location","reload","preButton","backgroundColor","checkNeedRefresh","Navigator","Div","Sort","Select","PageButton","key","Songs","cover_medium","Loading","NoResult","Artists","picture_medium","Albums","select","currentAudio","Reco","enterHandler","hover","leaveHandler","currentTarget","nextElementSibling","pause","addEventListener","endedHandler","pauseHandler","onMouseEnter","onMouseLeave","Span","className","RECO","Body","posts","random","Recommend","SubTitle","Album_title","Info","Genres","genres","SubGenres","Company","label","Release","release_date","tracks","cover_small","Artist_title","changeHandler","selected","filter","URL","calcelToken","mapped","setted","newArray","sort","a","b","Section","type","fontWeight","Content","contributors","ele","withRouter","GlobalStyle","createGlobalStyle","App","bgArray","img0","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","img13","img14","img15","img16","img17","img18","img19","img20","img21","bgNum","backgroundImage","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.253b79ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.b0bdb43e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.4b9c44a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.7b539afc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.ce6e4927.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.e1c2affd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.5209f7c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.a3a26fda.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.c1dcf519.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.fa8b297a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.cbe5b687.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10.ebfd7479.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11.102d3f5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/12.e123c255.jpg\";","module.exports = __webpack_public_path__ + \"static/media/13.86d5c2c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/14.e9bf3b6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/15.b43acd6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/16.d45e7ab5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/17.b0c83190.jpg\";","module.exports = __webpack_public_path__ + \"static/media/18.aa47eb0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/19.3cf578b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/20.2a9b2d79.jpg\";","module.exports = __webpack_public_path__ + \"static/media/21.ddcacf1c.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst Container = styled.div`\r\n  padding-top: 50px;\r\n  width: 100%;\r\n  height: 100px;\r\n  padding-bottom: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: -80px;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  order: 1;\r\n  z-index: 1;\r\n`;\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 32px;\r\n  color: black;\r\n`;\r\nconst Search = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 10px;\r\n  width: 300px;\r\n  height: 32px;\r\n  font-size: 1.2rem;\r\n  font-weight: 500px;\r\n  border-radius: 30px;\r\n  border: 3px solid rgba(24, 21, 50, 0.55);\r\n  outline: none;\r\n  margin: 20px 0;\r\n  color: #333;\r\n  background-color: rgba(250, 250, 250, 0.85);\r\n`;\r\nconst SearchBar = styled.input`\r\n  background-color: rgba(0, 0, 0, 0);\r\n  margin-right: 10px;\r\n  border: 0;\r\n  outline: 0;\r\n  width: 100%;\r\n  height: inherit;\r\n`;\r\nconst Button = styled.button`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px;\r\n  border: 0;\r\n  outline: 0;\r\n  color: white;\r\n  font-weight: border;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n  &:active {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    input: \"\"\r\n  };\r\n  \r\n  //user type input\r\n  keyChangeHandler = e => {\r\n    // e.preventDefault();\r\n    this.setState({\r\n      input: e.target.value\r\n    });\r\n  };\r\n  \r\n  //user press enter\r\n  keyDownHandler = e => {\r\n    if (e.keyCode === 13) {\r\n      const go = document.querySelector(\"#go\");\r\n      go.parentElement.click();\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Header>\r\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n            <Title>FIND MUSIC . COM</Title>\r\n          </Link>\r\n          <Search>\r\n            <SearchBar\r\n              id=\"searchBar\"\r\n              onChange={this.keyChangeHandler}\r\n              onKeyDown={this.keyDownHandler}\r\n            ></SearchBar>\r\n            <Link to={`/${this.state.input}`}>\r\n              <Button id=\"go\">GO</Button>\r\n            </Link>\r\n          </Search>\r\n        </Header>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from 'prop-types';\r\n\r\nlet currentAudio = \"\";\r\nclass Song extends React.Component {\r\n  constructor(props) {\r\n    //id, title, preview, artist, album\r\n    super(props);\r\n    this.state = {\r\n      audio: false\r\n    };\r\n    this.audioRef = React.createRef();\r\n  }\r\n  clickHandler = e => {\r\n    e.preventDefault();\r\n    this.audioRef.current.play();\r\n    // const audio = e.currentTarget.nextElementSibling;\r\n    // // audio play\r\n    // if (this.state.audio) {\r\n    //   this.setState({\r\n    //     audio: false\r\n    //   });\r\n    //   audio.pause();\r\n    // } else {\r\n    // //non audio play\r\n    //   if (currentAudio) {\r\n    //     const preAudio = currentAudio;\r\n    //     // if (preAudio) {\r\n    //       preAudio.pause();\r\n    //     // }\r\n    //   }\r\n    //   currentAudio = audio;\r\n    //   this.setState({\r\n    //     audio: true\r\n    //   });\r\n    //   audio.play();\r\n    // }\r\n  };\r\n  stopHandler = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      audio: false\r\n    });\r\n  };\r\n  render() {\r\n    const { props } = this;\r\n    return (\r\n      <Container>\r\n        <Poster id={props.id} poster={props.album}></Poster>\r\n        <Title>{props.title}</Title>\r\n        <Singer>{props.artist}</Singer>\r\n        <Preview>\r\n          <Button onClick={this.clickHandler}>\r\n            <span role=\"img\" aria-label=\"img\">\r\n              🎼\r\n            </span>\r\n          </Button>\r\n          <audio id={props.id} ref={this.audioRef} onEnded={this.stopHandler} onPause={this.stopHandler} >\r\n            <source src={props.preview}></source>\r\n          </audio>\r\n        </Preview>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nSong.propTypes = {\r\n  preview:PropTypes.string.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  artist: PropTypes.string.isRequired,\r\n  title:PropTypes.string.isRequired,\r\n  album:PropTypes.string.isRequired\r\n\r\n}\r\nconst Container = styled.div`\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 0.5fr 2.5fr 1.8fr .2fr;\r\n  grid-column-gap:20px;\r\n  align-items: center;\r\n  font-size: 1.1rem;\r\n`;\r\nconst Poster = styled.div`\r\n  width: 70px;\r\n  height: 70px;\r\n  background-image: url(${props => props.poster});\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Title = styled.span`\r\n`;\r\nconst Singer = styled.span`\r\n  text-align: center;\r\n`;\r\nconst Preview = styled.div`\r\n`;\r\nconst Button = styled.button`\r\n  background-color: rgba(0, 0, 0, 0);\r\n  border: 0;\r\n  outline: 0;\r\n  cursor: pointer;\r\n  font-size: 1.4rem;\r\n  padding-right:20px;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  &:active {\r\n    transform: scale(1);\r\n  }\r\n`;\r\nexport default Song;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {PropTypes} from 'prop-types';\r\nclass Artist extends React.Component {\r\n  render() {\r\n    return (\r\n      <Link\r\n        to={`/artist/${this.props.artist}`}\r\n        style={{ textDecoration: \"none\", color: \"black\" }}\r\n      >\r\n        <Contaier>\r\n          <Poster poster={this.props.poster}></Poster>\r\n          <Name>{this.props.name}</Name>\r\n        </Contaier>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\nArtist.propTypes = {\r\n  artist : PropTypes.number.isRequired,\r\n  poster : PropTypes.string.isRequired,\r\n  name : PropTypes.string.isRequired\r\n}\r\nexport default Artist;\r\n\r\nconst Contaier = styled.div`\r\n  width: 100%;\r\n  font-size: 1.1rem;\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  align-items: center;\r\n  grid-column-gap: 20px;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n`;\r\nconst Poster = styled.div`\r\n  background-image: url(${props => props.poster});\r\n  width: 100px;\r\n  height: 100px;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  background-size: cover;\r\n`;\r\nconst Name = styled.div`\r\n  padding-right: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport Song from \"../components/Song\";\r\nimport Artist from \"../components/Artist\";\r\nimport Album from \"../components/Album\";\r\nlet cancel;\r\nconst CancelToken = axios.CancelToken;\r\nconst URL = \"https://deezerdevs-deezer.p.rapidapi.com/search?\";\r\n// let currentPlayCheck = \"\";\r\nlet selectSongDatas = [];\r\nlet selectArtistDatas = [];\r\nlet selectAlbumDatas = [];\r\nlet preSongButton = \"\";\r\nlet preArtistButton = \"\";\r\nlet preAlbumButton = \"\";\r\nclass Result extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.gotoSong = React.createRef();\r\n    this.gotoArtist = React.createRef();\r\n    this.gotoAlbum = React.createRef();\r\n    this.state = {\r\n      id: props.match.params.id,\r\n      datas: [],\r\n      songPage: 0,\r\n      artistPage: 0,\r\n      albumPage: 0,\r\n      isLoading: true\r\n    };\r\n    this._isMounted = false;\r\n  }\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    cancel();\r\n  }\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n    const {\r\n      data: { data }\r\n    } = await axios.get(`${URL}`, {\r\n      params: {\r\n        q: this.state.id,\r\n        limit: 50\r\n      },\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"03afeef36cmsh1bdcf2e9a60f303p19457cjsn1f84e9465bd0\"\r\n      },\r\n      cancelToken: new CancelToken(c => {\r\n        cancel = c;\r\n      })\r\n    });\r\n    this._isMounted &&\r\n      this.setState({\r\n        datas: data\r\n      });\r\n      //organize artist data\r\n    const newMapAR = data.map(each => each.artist.id);\r\n    const settedAR = new Set(newMapAR);\r\n    const arrayedAR = Array.from(settedAR);\r\n    for (let i = 0; i < arrayedAR.length; i++) {\r\n      for (let j = 0; j < data.length; j++) {\r\n        if (data[j].artist.id === arrayedAR[i]) {\r\n          arrayedAR[i] = data[j].artist;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    //organize album data\r\n    const newMapAB = data.map(each => each.album.id);\r\n    const settedAB = new Set(newMapAB);\r\n    const arrayedAB = Array.from(settedAB);\r\n    for (let i = 0; i < arrayedAB.length; i++) {\r\n      for (let j = 0; j < data.length; j++) {\r\n        if (data[j].album.id === arrayedAB[i]) {\r\n          arrayedAB[i] = data[j].album;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    //save artist, album data\r\n    this._isMounted &&\r\n      this.setState({\r\n        artists: arrayedAR,\r\n        albums: arrayedAB\r\n      });\r\n      //list with default value 10 items\r\n    selectSongDatas = this.bySelect(selectSongDatas, 10, this.state.datas);\r\n    selectArtistDatas = this.bySelect(\r\n      selectArtistDatas,\r\n      10,\r\n      this.state.artists\r\n    );\r\n    selectAlbumDatas = this.bySelect(selectAlbumDatas, 10, this.state.albums);\r\n\r\n    this._isMounted &&\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n    \r\n  }\r\n  //user click 10/20/30 list item counts\r\n  bySelect = (anArray, num, stateLocation) => {\r\n    anArray = [];\r\n    for (let i = 0; i < stateLocation.length; i++) {\r\n      let index = Math.floor(i.toString() / num);\r\n      if (!anArray[index]) {\r\n        anArray[index] = [];\r\n      }\r\n      anArray[index].push(stateLocation[i]);\r\n    }\r\n    \r\n    return anArray;\r\n  };\r\n\r\n  checkNeedRefresh() {\r\n    if (this.state.id !== this.props.match.params.id) {\r\n      window.location.reload();\r\n    }\r\n  }\r\n  //go to top\r\n  topHandler = e => {\r\n    window.scroll({ top: 0, behavior: \"smooth\" });\r\n  };\r\n  //go to song section\r\n  songHandler = e => {\r\n    const distance = this.gotoSong.current.offsetTop - 140;\r\n    window.scroll({ top: distance, behavior: \"smooth\" });\r\n  };\r\n  //go to artist section\r\n  artistHandler = e => {\r\n    const distance = this.gotoArtist.current.offsetTop - 140;\r\n    window.scroll({ top: distance, behavior: \"smooth\" });\r\n  };\r\n  //go to album section\r\n  albumHandler = e => {\r\n    const distance = this.gotoAlbum.current.offsetTop - 140;\r\n    window.scroll({ top: distance, behavior: \"smooth\" });\r\n  };\r\n  //song list count handler\r\n  selectSongHandler = e => {\r\n    this._isMounted &&\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n    selectSongDatas = this.bySelect(\r\n      selectSongDatas,\r\n      e.target.value,\r\n      this.state.datas\r\n    );\r\n    this._isMounted &&\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n  };\r\n  //artist list count handler\r\n  selectArtistHandler = e => {\r\n    this._isMounted &&\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    selectArtistDatas = this.bySelect(\r\n      selectArtistDatas,\r\n      e.target.value,\r\n      this.state.artists\r\n    );\r\n    this._isMounted &&\r\n    this.setState({\r\n      isLoading: false\r\n    });\r\n  };\r\n  //album list count handler\r\n  selectAlbumHandler = e => {\r\n    this._isMounted &&\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    selectAlbumDatas = this.bySelect(\r\n      selectAlbumDatas,\r\n      e.target.value,\r\n      this.state.albums\r\n    );\r\n    this._isMounted &&\r\n    this.setState({\r\n      isLoading: false\r\n    });\r\n  };\r\n\r\n  buttonBackgroundChanger(preButton, target) {\r\n    if (!preSongButton) {\r\n      preButton = target;\r\n    } else {\r\n      preButton.style.backgroundColor = \"white\";\r\n      preButton = target;\r\n    }\r\n    target.style.backgroundColor = \"rgb(200,200,200)\";\r\n    return preButton;\r\n  }\r\n  //song pages\r\n  songPageHandler = e => {\r\n    this._isMounted &&\r\n      this.setState({\r\n        songPage: e.target.value - 1\r\n      });\r\n    preSongButton = this.buttonBackgroundChanger(preSongButton, e.target);\r\n  };\r\n  //artist pages\r\n  artistPageHandler = e => {\r\n    this._isMounted &&\r\n      this.setState({\r\n        artistPage: e.target.value - 1\r\n      });\r\n    preArtistButton = this.buttonBackgroundChanger(preArtistButton, e.target);\r\n  };\r\n  //album pages\r\n  albumPageHandler = e => {\r\n    this._isMounted &&\r\n      this.setState({\r\n        albumPage: e.target.value - 1\r\n      });\r\n    preAlbumButton = this.buttonBackgroundChanger(preAlbumButton, e.target);\r\n  };\r\n\r\n  render() {\r\n    this.checkNeedRefresh();\r\n    const {\r\n      state: { isLoading }\r\n    } = this;\r\n    return (\r\n      <Container>\r\n        <Navigator>\r\n          <Button onClick={this.topHandler}>TOP</Button>\r\n          <Button onClick={this.songHandler}>BY SONGS</Button>\r\n          <Button onClick={this.artistHandler}>BY ARTISTS</Button>\r\n          <Button onClick={this.albumHandler}>BY ALBUMS</Button>\r\n        </Navigator>\r\n        <Div>\r\n          <Sort ref={this.gotoSong}>BY SONGS</Sort>\r\n          <Select onChange={this.selectSongHandler}>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"30\">30</option>\r\n          </Select>\r\n          {selectSongDatas?.map((each, index) => (\r\n            <PageButton\r\n              key={index}\r\n              id={`songPageButton${index}`}\r\n              onClick={this.songPageHandler}\r\n              value={index + 1}\r\n            >\r\n              {index + 1}\r\n            </PageButton>\r\n          ))}\r\n        </Div>\r\n        <Songs>\r\n          {selectSongDatas.length > 0 ? (\r\n            selectSongDatas[this.state.songPage]?.map((each, index) => {\r\n              return (\r\n                <Song\r\n                  key={index}\r\n                  id={`resultSongPage${each.id}`}\r\n                  title={each.title}\r\n                  preview={each.preview}\r\n                  artist={each.artist.name}\r\n                  album={each.album.cover_medium}\r\n                ></Song>\r\n              );\r\n            })\r\n          ) : isLoading ? (\r\n            <Loading>Loading..</Loading>\r\n          ) : (\r\n            <NoResult>No result found.</NoResult>\r\n          )}\r\n        </Songs>\r\n        <Div>\r\n          <Sort ref={this.gotoArtist}>BY ARTISTS</Sort>\r\n          <Select onChange={this.selectArtistHandler}>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"30\">30</option>\r\n          </Select>\r\n          {selectArtistDatas?.map((each, index) => (\r\n            <PageButton\r\n              key={index}\r\n              id={`artistPageButton${index}`}\r\n              onClick={this.artistPageHandler}\r\n              value={index + 1}\r\n            >\r\n              {index + 1}\r\n            </PageButton>\r\n          ))}\r\n        </Div>\r\n        <Artists>\r\n          {selectArtistDatas?.length > 0 ? (\r\n            selectArtistDatas[this.state.artistPage]?.map((each, index) => {\r\n              return <Artist\r\n                key={index}\r\n                id={index}\r\n                artist={each.id}\r\n                name={each.name}\r\n                poster={each.picture_medium}\r\n              ></Artist>\r\n  })\r\n          ) : isLoading ? (\r\n            <Loading>Loading..</Loading>\r\n          ) : (\r\n            <NoResult>No result found.</NoResult>\r\n          )}\r\n        </Artists>\r\n        <Div>\r\n          <Sort ref={this.gotoAlbum}>BY ALBUMS</Sort>\r\n          <Select onChange={this.selectAlbumHandler}>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"30\">30</option>\r\n          </Select>\r\n          {selectAlbumDatas?.map((each, index) => (\r\n            <PageButton\r\n              key={index}\r\n              id={`albumPageButton${index}`}\r\n              onClick={this.albumPageHandler}\r\n              value={index + 1}\r\n            >\r\n              {index + 1}\r\n            </PageButton>\r\n          ))}\r\n        </Div>\r\n        <Albums>\r\n          {selectAlbumDatas?.length > 0 ? (\r\n            selectAlbumDatas[this.state.albumPage]?.map((each, index) => {\r\n              return <Album\r\n                key={index}\r\n                id={index}\r\n                album={each.id}\r\n                title={each.title}\r\n                poster={each.cover_medium}\r\n              ></Album>\r\n            })\r\n          ) : isLoading ? (\r\n            <Loading>Loading..</Loading>\r\n          ) : (\r\n            <NoResult>No result found.</NoResult>\r\n          )}\r\n        </Albums>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: rgba(150, 150, 150, 0.6);\r\n  color: rgb(40, 40, 40);\r\n  min-height: 100vh;\r\n  padding-bottom: 50px;\r\n`;\r\nconst Navigator = styled.div`\r\n  /* background-color:black; */\r\n  padding-top: 10px;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 47px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1;\r\n`;\r\nconst Button = styled.button`\r\n  font-size: 1rem;\r\n  font-family: Cambria;\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  margin: 10px;\r\n  padding: 0 1rem;\r\n  border: 3px solid rgba(24, 21, 50, 0.55);\r\n  width: 150px;\r\n  /* height:1.6rem; */\r\n  outline: 0;\r\n  cursor: pointer;\r\n`;\r\nconst PageButton = styled.button`\r\n  font-size: 1rem;\r\n  font-family: Cambria;\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  margin: 3px;\r\n  border: 3px solid rgba(24, 21, 50, 0.55);\r\n  width: 40px;\r\n  outline: 0;\r\n  cursor: pointer;\r\n  text-align: center;\r\n`;\r\nconst Select = styled.select`\r\n  font-size: 1rem;\r\n  font-family: Cambria;\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  margin: 10px;\r\n  border: 3px solid rgba(24, 21, 50, 0.55);\r\n  width: 70px;\r\n  outline: 0;\r\n  cursor: pointer;\r\n  text-align: center;\r\n`;\r\nconst Songs = styled.div`\r\n  width: 80%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 20px;\r\n  overflow-x: auto;\r\n`;\r\nconst Albums = styled.div`\r\n  width: 80%;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 20px;\r\n  overflow-x: auto;\r\n`;\r\nconst Artists = styled.div`\r\n  width: 80%;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 20px;\r\n  overflow-x: auto;\r\n`;\r\nconst Div = styled.div`\r\n  width: 80%;\r\n`;\r\nconst Sort = styled.h1`\r\n  font-size: 1rem;\r\n  margin: 20px 0;\r\n  font-weight: bolder;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  width: max-content;\r\n  padding: 0.5rem;\r\n  border-radius: 25px;\r\n  color: rgb(40, 40, 40);\r\n  margin-top: 50px;\r\n  align-self: flex-start;\r\n`;\r\n\r\nconst NoResult = styled.div`\r\n  width: 100%;\r\n  background-color: rgba(240, 240, 240, 0.55);\r\n  padding: 2rem;\r\n  color: rgb(40, 40, 40);\r\n`;\r\nconst Loading = styled.div`\r\n  width: 100%;\r\n  background-color: rgba(240, 240, 240, 0.55);\r\n  padding: 2rem;\r\n  color: rgb(40, 40, 40);\r\n`;\r\nexport default Result;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {PropTypes} from 'prop-types'\r\nclass Album extends React.Component {\r\n  render() {\r\n    \r\n    return (\r\n      <Link\r\n        to={`/album/${this.props.album}`}\r\n        style={{ textDecoration: \"none\", color: \"black\" }}\r\n      >\r\n        <Container>\r\n          <Poster poster={this.props.poster}></Poster>\r\n          <Name>{this.props.title}</Name>\r\n        </Container>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nAlbum.propTypes = {\r\n  album : PropTypes.number.isRequired,\r\n  poster : PropTypes.string.isRequired,\r\n  title : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Album;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  font-size: 1.1rem;\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  align-items: center;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n`;\r\nconst Name = styled.div`\r\n  padding: 10px;\r\n`;\r\nconst Poster = styled.div`\r\n  background-image: url(${props => props.poster});\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: 120px;\r\n  height: 120px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from 'prop-types'\r\n\r\nlet currentAudio = \"\";\r\nclass Reco extends React.Component {\r\n  constructor(props) {\r\n    //title, preview, album\r\n    super(props); //id\r\n    this.state = {\r\n      audio: false\r\n    };\r\n  }\r\n  \r\n  enterHandler = e => {\r\n    return this.setState({\r\n      hover: true\r\n    });\r\n  };\r\n\r\n  leaveHandler = e => {\r\n    return this.state.audio\r\n      ? null\r\n      : this.setState({\r\n          hover: false\r\n        });\r\n  };\r\n  clickHandler = e => {\r\n    const audio = e.currentTarget.nextElementSibling;\r\n    //yes music before\r\n    if (currentAudio) {\r\n      //pass to pre\r\n      const preAudio = currentAudio;\r\n      preAudio.pause();\r\n    }\r\n    //set as now\r\n    currentAudio = audio;\r\n    audio.addEventListener(\"ended\", this.endedHandler);\r\n    audio.addEventListener(\"pause\", this.pauseHandler);\r\n    audio.play();\r\n    this.setState({\r\n      audio: true\r\n    });\r\n  };\r\n  endedHandler = e => {\r\n    // console.log(\"ENDED\");\r\n    currentAudio = \"\";\r\n  };\r\n  pauseHandler = e => {\r\n    // console.log(\"-----PAUSED\");\r\n    this.setState({\r\n      audio: false,\r\n      hover: false\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Container\r\n        poster={this.props.album.cover_medium}\r\n        onMouseEnter={this.enterHandler}\r\n        onMouseLeave={this.leaveHandler}\r\n      >\r\n        <Title>\r\n          {this.state.hover ? (\r\n            <div>\r\n              <Span>{this.props.album.title}</Span>\r\n              <Button onClick={this.clickHandler}>\r\n                <span role=\"img\" aria-label=\"img\">\r\n                  🎼\r\n                </span>\r\n              </Button>\r\n              <audio className=\"audio\" id={`reco${this.props.id}`}>\r\n                <source src={`${this.props.preview}`}></source>\r\n              </audio>\r\n            </div>\r\n          ) : (\r\n            this.props.title\r\n          )}\r\n        </Title>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nReco.propTypes = {\r\n  title:PropTypes.string.isRequired,\r\n  preview:PropTypes.string.isRequired,\r\n  id : PropTypes.number.isRequired,\r\n  album : PropTypes.object.isRequired\r\n}\r\nconst Container = styled.div`\r\n  width: 160px;\r\n  height: 200px;\r\n  background: #333 url(${props => props.poster}) no-repeat center center/cover;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-weight: 500px;\r\n  box-shadow: 17px 16px 0px -7px rgba(30,30,30,0.75);\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(20, 20, 20, 0.5);\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  transition: all 0.5s;\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    font-size: 1.9rem;\r\n    background-color: rgba(240, 240, 240, 0.5);\r\n  }\r\n`;\r\nconst Button = styled.button`\r\n  font-size: 2rem;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  outline: 0;\r\n  border: 0;\r\n  transition: all 0.3s;\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.1);\r\n  }\r\n  &:active {\r\n    transform: scale(1);\r\n  }\r\n`;\r\nconst Span = styled.span`\r\n  font-size: 1rem;\r\n  color: darkslategray;\r\n  background-color: rgba(240, 240, 240, 0.7);\r\n  padding: 0.2rem;\r\n  border-radius: 5px;\r\n  font-weight: 500px;\r\n  display: block;\r\n`;\r\nexport default Reco;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Reco from \"./Reco\";\r\n\r\nconst RECO = [\r\n  \"manhattans\",\r\n  \"james brown\",\r\n  \"fonsi\",\r\n  \"eminem\",\r\n  \"jovanotti\",\r\n  \"ed sheeran\"\r\n];\r\nconst URL = \"https://deezerdevs-deezer.p.rapidapi.com/search?\";\r\n\r\nclass Body extends React.Component {\r\n  state = {\r\n    posts: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const num = Math.floor(Math.random() * 6);\r\n    const {\r\n      data: { data }\r\n    } = await axios.get(`${URL}`, {\r\n      params: {\r\n        q: RECO[num],\r\n        limit: 20\r\n      },\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"03afeef36cmsh1bdcf2e9a60f303p19457cjsn1f84e9465bd0\"\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      posts: data,\r\n      name: data[0].artist.name\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Recommend>\r\n          {this.state.posts ? (\r\n            <Div>\r\n              <Title>Today's SINGER</Title>\r\n              <SubTitle>{this.state.name}</SubTitle>\r\n            </Div>\r\n          ) : null}\r\n          <Albums>\r\n            {this.state.posts?.map((each, index) => (\r\n              <Reco\r\n                key={each.id}\r\n                id={index}\r\n                title={each.title}\r\n                preview={each.preview}\r\n                album={each.album}\r\n              ></Reco>\r\n            ))}\r\n          </Albums>\r\n        </Recommend>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  background-color: rgba(150, 150, 150, 0.6);\r\n  color: rgb(40, 40, 40);\r\n  min-height: 100vh;\r\n`;\r\nconst Recommend = styled.div`\r\n  padding: 70px 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  width: 80%;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 1.2rem;\r\n  font-weight: bolder;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  width: max-content;\r\n  padding: .7rem;\r\n  border-radius:25px;\r\n`;\r\nconst SubTitle = styled.h1`\r\n  font-size: 1rem;\r\n  margin: 20px;\r\n  font-weight: bolder;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  width: max-content;\r\n  padding: .5rem;\r\n  border-radius:25px;\r\n`;\r\nconst Albums = styled.div`\r\n  width: 80%;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 30px;\r\n  justify-items: center;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  padding: 50px 30px;\r\n  /* background-color: rgba(240, 240, 240, 0.45); */\r\n  background-color: rgba(240, 240, 240, 0.55);\r\n  border-radius:50px;\r\n`;\r\nexport default Body;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Song from \"../components/Song\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst URL = \"https://deezerdevs-deezer.p.rapidapi.com/album/\";\r\nexport class Album_title extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.match.params.id,\r\n      data: \"\"\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const id = this.state.id;\r\n    const { data } = await axios.get(`${URL}${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"03afeef36cmsh1bdcf2e9a60f303p19457cjsn1f84e9465bd0\"\r\n      }\r\n    });\r\n    this.setState({\r\n      data: data\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.data ? (\r\n          <Div>\r\n            <Poster poster={this.state.data.cover_medium}></Poster>\r\n            <Info>\r\n              <Title>{this.state.data.title}</Title>\r\n              <Link\r\n                to={`/artist/${this.state.data.artist.id}`}\r\n                style={{ textDecoration: \"none\", color: \"black\" }}\r\n              >\r\n                <Artist>Artist : {this.state.data.artist.name}</Artist>\r\n              </Link>\r\n              <Genres>\r\n                Genres :{\" \"}\r\n                {this.state.data.genres.data.map((each, index) => (\r\n                  <SubGenres key={index}>\r\n                    {this.state.data.genres.data.length !== index + 1\r\n                      ? `${each.name} & `\r\n                      : each.name}\r\n                  </SubGenres>\r\n                ))}\r\n              </Genres>\r\n              <Company>{this.state.data.label}</Company>\r\n              <Release>Release Date : {this.state.data.release_date}</Release>\r\n            </Info>\r\n          </Div>\r\n        ) : null}\r\n        {this.state.data.tracks ? (\r\n          <Songs>\r\n            {this.state.data.tracks.data.map((each, index) => {\r\n              return (\r\n                <Song\r\n                  key={index}\r\n                  id={`$albumPage${index}`}\r\n                  title={each.title}\r\n                  preview={each.preview}\r\n                  artist={each.artist.name}\r\n                  album={this.state.data.cover_small}\r\n                ></Song>\r\n              );\r\n            })}\r\n          </Songs>\r\n        ) : (\r\n          <Loading>\"Loading...\"</Loading>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  min-height: 70vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 30px 0;\r\n  background-color: rgba(150, 150, 150, 0.6);\r\n`;\r\nconst Loading = styled.div`\r\n  width: 80%;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  height: 25px;\r\n  padding: 30px;\r\n`;\r\nconst Div = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  width: 50%;\r\n  padding: 30px 0;\r\n  margin: 50px;\r\n`;\r\nconst Poster = styled.div`\r\n  background-image: url(${props => props.poster});\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: 180px;\r\n  height: 180px;\r\n  justify-self: center;\r\n  box-shadow: 17px 16px 0px -7px rgba(30, 30, 30, 0.75);\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: flex-start;\r\n  margin: 0 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 25px;\r\n`;\r\nconst Artist = styled.div`\r\n  font-size: 20px;\r\n`;\r\nconst Genres = styled.div`\r\n  font-size: 17px;\r\n`;\r\nconst SubGenres = styled.span``;\r\nconst Company = styled.span``;\r\nconst Release = styled.span``;\r\nconst Songs = styled.div`\r\n  width: 80%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 20px;\r\n  overflow-x: auto;\r\n`;\r\n\r\nexport default Album_title;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Song from \"../components/Song\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nconst CancelToken = axios.CancelToken;\r\nlet cancel;\r\nexport class Artist_title extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.match.params.id,\r\n    };\r\n    this._isMounted = false;\r\n  }\r\n  componentWillUnmount(){\r\n    cancel();\r\n    this._isMounted = false;\r\n  }\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n    const id = this.state.id;\r\n    const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\r\n    const URL = `https://api.deezer.com/artist/${id}/top?`;\r\n    const {\r\n      data: { data }\r\n    } = await axios.get(proxyURL + URL, {\r\n      params:{limit:50},\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"03afeef36cmsh1bdcf2e9a60f303p19457cjsn1f84e9465bd0\"\r\n      },\r\n      calcelToken: new CancelToken (function executor(c){\r\n        cancel=c;\r\n      })\r\n    });\r\n\r\n    // organize data\r\n    const mapped = data.map(each => each.album.title);\r\n    const setted = new Set(mapped);\r\n    const newArray = Array.from(setted);\r\n    newArray.sort((a, b) => (a > b ? 1 : -1));\r\n    this._isMounted&&this.setState({\r\n      data: data,\r\n      selected: data,\r\n      album: newArray\r\n    });\r\n  \r\n  }\r\n  //go to top\r\n  topHandler = e => {\r\n    window.scroll({ top: 0, behavior: \"smooth\" });\r\n  };\r\n  //user change album \r\n  changeHandler = e => {\r\n    this._isMounted&&this.setState({\r\n      selected: this.state.data\r\n    });\r\n    if (e.target.value !== \"ALL\") {\r\n      const selected = this.state.data.filter(\r\n        each => each.album.title === e.target.value\r\n      );\r\n      this._isMounted&&this.setState({\r\n        selected\r\n      });\r\n\r\n    }\r\n  };\r\n  // reLoadHandler = e => {\r\n    \r\n  // };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Navigator>\r\n          <Button onClick={this.topHandler}>TOP</Button>\r\n          <Select name=\"Album\" onChange={this.changeHandler}>\r\n            <option value=\"ALL\">ALL</option>\r\n            {this.state.album?.map((each, index) => (\r\n              <option key={index} value={each}>\r\n                {each}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </Navigator>\r\n        <Songs>\r\n          {this.state.selected ? (\r\n            this.state.selected.map((each, index) => (\r\n              <Section key={index}>\r\n                <Info>\r\n                  <Div>\r\n                    <Title>{each.album.type} : </Title>\r\n                    <Link\r\n                      to={`/album/${each.album.id}`}\r\n                      style={{ textDecoration: \"none\", color: \"black\",  fontWeight:\"bolder\"}}\r\n                    >\r\n                      <Content>{each.album.title}</Content>\r\n                    </Link>\r\n                  </Div>\r\n                  <Div>\r\n                    <Title>Contributors : </Title>\r\n                    {each.contributors.map((ele, index) =>\r\n                      index < 2 ? (\r\n                        // <Link\r\n                        //   to={`/artist/${ele.id}`}\r\n                        //   key={index}\r\n                        //   style={{ textDecoration: \"none\", color: \"black\" }}\r\n                        // >\r\n                          <Content key={index}>\r\n                            {index < each.contributors.length - 1 && index < 1\r\n                              ? `${ele.name} & `\r\n                              : ele.name}\r\n                          </Content>\r\n                        // </Link>\r\n                      ) : null\r\n                    )}\r\n                  </Div>\r\n                </Info>\r\n                <Song\r\n                  key={index}\r\n                  id={`artistPage${each.id}`}\r\n                  title={each.title}\r\n                  preview={each.preview}\r\n                  artist={each.artist.name}\r\n                  album={each.album.cover_small}\r\n                ></Song>\r\n              </Section>\r\n            ))\r\n          ) : (\r\n            <Loading>\"Loading...\"</Loading>\r\n          )}\r\n        </Songs>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  min-height: 70vh;\r\n  background-color: rgba(150, 150, 150, 0.6);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Navigator = styled.div`\r\n  padding-top: 10px;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 47px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1;\r\n`;\r\nconst Button = styled.button`\r\n  font-size: 1rem;\r\n  font-family: Cambria;\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  margin: 10px;\r\n  padding: 0 1rem;\r\n  border: 3px solid rgba(24, 21, 50, 0.55);\r\n  width: 150px;\r\n  /* height:1.6rem; */\r\n  outline: 0;\r\n  cursor: pointer;\r\n`;\r\nconst Select = styled.select`\r\n  font-size: 1rem;\r\n  font-family: Cambria;\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  margin: 10px;\r\n  padding: 0 1rem;\r\n  border: 3px solid rgba(24, 21, 50, 0.55);\r\n  width: 150px;\r\n  /* height:1.6rem; */\r\n  outline: 0;\r\n  cursor: pointer;\r\n  text-align: center;\r\n`;\r\nconst Loading = styled.div`\r\n  width: 80%;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  height: 25px;\r\n  padding: 30px;\r\n`;\r\nconst Songs = styled.div`\r\n  width: 80%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 20px;\r\n  padding: 50px 0;\r\n`;\r\nconst Section = styled.div``;\r\nconst Div = styled.div`\r\n  padding:0 10px;\r\n`;\r\nconst Info = styled.div`\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  display: grid;\r\n  grid-template-columns: 0.7fr 1.3fr;\r\n  justify-items: flex-start;\r\n  align-content: center;\r\n  padding: 10px 0;\r\n  min-height: 70px;\r\n  border-bottom: 1px solid darkgray;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: border;\r\n  padding-bottom: 5px;\r\n`;\r\nconst Content = styled.span`\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport default withRouter(Artist_title);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        <Title>CONTACT</Title>\r\n        <Content>JI HYE LEE</Content>\r\n        <Content>sophitalia121@gmail.com</Content>\r\n      </Section>\r\n      <Section>\r\n        <Title>USE</Title>\r\n        <Content>DEEZER API</Content>\r\n        <Content>RAPID API</Content>\r\n      </Section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  background-color: rgba(240, 240, 240, 0.85);\r\n  color: rgb(40, 40, 40);\r\n  display: flex;\r\n  justify-content:center;\r\n`;\r\nconst Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content:space-between;\r\n  padding:30px;\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 1rem;\r\n`;\r\nconst Content = styled.span`\r\npadding-top:10px;\r\n  font-size: .9rem;\r\n`;\r\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport img0 from \"../image/0.jpg\";\nimport img1 from \"../image/1.jpg\";\nimport img2 from \"../image/2.jpg\";\nimport img3 from \"../image/3.jpg\";\nimport img4 from \"../image/4.jpg\";\nimport img5 from \"../image/5.jpg\";\nimport img6 from \"../image/6.jpg\";\nimport img7 from \"../image/7.jpg\";\nimport img8 from \"../image/8.jpg\";\nimport img9 from \"../image/9.jpg\";\nimport img10 from \"../image/10.jpg\";\nimport img11 from \"../image/11.jpg\";\nimport img12 from \"../image/12.jpg\";\nimport img13 from \"../image/13.jpg\";\nimport img14 from \"../image/14.jpg\";\nimport img15 from \"../image/15.jpg\";\nimport img16 from \"../image/16.jpg\";\nimport img17 from \"../image/17.jpg\";\nimport img18 from \"../image/18.jpg\";\nimport img19 from \"../image/19.jpg\";\nimport img20 from \"../image/20.jpg\";\nimport img21 from \"../image/21.jpg\";\nimport Home from \"./Home\";\nimport Result from \"../routes/Result\";\nimport Body from \"./Body\";\nimport Album_title from \"../routes/Album_title\";\nimport Artist_title from \"../routes/Artist_title\";\nimport Info from './Info';\nimport { createGlobalStyle } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\n    html,body{\n        height:100%;\n        width:100%;\n        font-family:Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n    }\n    #root{\n      width:100%;\n      min-height:100vh;\n      background-position:center center;\n      background-repeat:no-repeat;\n      background-size:cover;\n      background-attachment:fixed;\n      z-index:-1;\n    }\n`;\n\nfunction App() {\n  const bgArray = [\n    `url(${img0})`,\n    `url(${img1})`,\n    `url(${img2})`,\n    `url(${img3})`,\n    `url(${img4})`,\n    `url(${img5})`,\n    `url(${img6})`,\n    `url(${img7})`,\n    `url(${img8})`,\n    `url(${img9})`,\n    `url(${img10})`,\n    `url(${img11})`,\n    `url(${img12})`,\n    `url(${img13})`,\n    `url(${img14})`,\n    `url(${img15})`,\n    `url(${img16})`,\n    `url(${img17})`,\n    `url(${img18})`,\n    `url(${img19})`,\n    `url(${img20})`,\n    `url(${img21})`\n  ];\n  const bgNum = Math.floor(Math.random() * 22);\n  document.querySelector(\"#root\").style.backgroundImage = bgArray[bgNum];\n\n\n  return (\n    <HashRouter>\n      <GlobalStyle></GlobalStyle>\n      <Home></Home>\n      <Route exact path=\"/\" component={Body}></Route>\n      <Route exact path=\"/:id\" component={Result}></Route>\n      <Route exact path=\"/album/:id\" component={Album_title}></Route>\n      <Route exact path=\"/artist/:id\" component={Artist_title}></Route>\n      <Info></Info>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}